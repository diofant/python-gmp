name: Run coverage tests
on:
  workflow_call:
jobs:
  coverage:
    # Meson doesn't support lcov>=2.0, see mesonbuild/meson#11995
    runs-on: ubuntu-22.04
    env:
      PYTEST_ADDOPTS: --verbose
    strategy:
      fail-fast: true
      matrix:
        python-version: [pypy3.11, "3.x", 3.14]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          allow-prereleases: true
      - run: |
          sudo apt-get update
          sudo apt-get install lcov ninja-build
      - run: sudo locale-gen ru_RU.UTF-8
      - run: sudo locale-gen ps_AF.UTF-8
      - run: bash scripts/cibw_before_all.sh
      - run: pip install --upgrade pip
      - run: pip install --upgrade meson setuptools_scm
      - run: pip install --verbose .[tests]
        env:
          PKG_CONFIG_PATH: .local/lib/pkgconfig
      - name: Build and run coverage tests
        run: |
          meson setup build --prefix=/usr -Db_coverage=true
          meson install -C build --destdir ../build-install
          export PYTHONPATH="$(find build-install -name site-packages)"
          python -m pytest --hypothesis-profile=default
          ninja -C build coverage-html
          cp build/meson-logs/coverage.info \
             build/coverage-${{ matrix.python-version }}.info
        env:
          PKG_CONFIG_PATH: .local/lib/pkgconfig
          LD_LIBRARY_PATH: .local/lib
          CFLAGS: -Wall -Wpedantic -Werror -std=c17
      - uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.python-version }}
          path: |
            build/coverage-${{ matrix.python-version }}.info
  merge-coverage:
    runs-on: ubuntu-22.04
    needs:
      - coverage
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - run: |
          sudo apt-get update
          sudo apt-get install lcov
      - uses: actions/download-artifact@v4
        with:
          pattern: coverage-*
          path: build/
          merge-multiple: true
      - run: |
          for f in build/coverage-*.info
          do
            lcov --remove $f "*.h" --ignore-errors unused --output-file $f
          done
          genhtml build/coverage*.info --output-directory build/coverage
      - uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: |
            build/coverage/
            build/coverage*.info
      - uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          gcov_ignore: pythoncapi_compat.h
          gcov_include: fmt.c
                        main.c
                        zz.c
          gcov_args: --no-external
          fail_ci_if_error: true
